/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean findTarget(TreeNode root, int k) {
        HashMap<Integer,Integer> hm=new HashMap<>();
        
        hm=preOrder(root,hm);
        
        for(Map.Entry e:hm.entrySet()) {
            int curr=(int)e.getKey();
            hm.put(curr,hm.getOrDefault(curr,0)-1);
            if(hm.getOrDefault(k-curr,0)>0)
                return true;
        }
        return false;
    }
    
    public HashMap<Integer,Integer> preOrder(TreeNode node,HashMap<Integer,Integer> hm) {
        
        if(node==null)
            return hm;
        hm.put(node.val,hm.getOrDefault(node.val,0)+1);
        hm=preOrder(node.left,hm);
        hm=preOrder(node.right,hm);
        return hm;
    }
}
