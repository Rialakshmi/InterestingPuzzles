/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null || head.next == null)
            return head;
        ListNode temp=head;
        ListNode slow=head;
        ListNode fast=head;
        
        while(fast!=null && fast.next !=null) {
            temp=slow;
            slow=slow.next;
            fast=fast.next.next;
        }
        temp.next=null;
        ListNode left=sortList(head);
        ListNode right=sortList(slow);
        
        return mergeList(left,right);
        
    }
    
    public ListNode mergeList(ListNode left,ListNode right) {
        
        ListNode dummyHead=new ListNode(0);
        ListNode curr=dummyHead;
        
        while(left!=null && right!=null ) {
            
            if(left.val<right.val) {
                curr.next=left;
                left=left.next;
            }else {
                curr.next=right;
                right=right.next;
            }
            curr=curr.next;
        }
        
        if(left!=null) 
            curr.next=left;
        if(right!=null)
            curr.next=right;
        return dummyHead.next;
    }
}
