class Solution {
    public TreeNode bstToGst(TreeNode root) {
        
        List<Integer> list=preOrder(root,new ArrayList<Integer>());
        Collections.sort(list,Collections.reverseOrder());
        HashMap<Integer,Integer> hm=new HashMap<>();
        int prev=0;
        for(Integer num:list) {
            hm.put(num,prev+num);
            prev =hm.get(num);
        }
        
        updateTree(root,hm);
        return root;
    }
    
    List<Integer> preOrder(TreeNode node,List<Integer> list) {
        if(node==null)
            return list;
        list.add(node.val);
        list=preOrder(node.left,list);
        list=preOrder(node.right,list);
        return list;
        
    }
    
    public void updateTree(TreeNode node,HashMap<Integer,Integer> hm) {
        if(node==null)
            return;
        node.val=hm.get(node.val);
        updateTree(node.left,hm);
        updateTree(node.right,hm);
    }
}
