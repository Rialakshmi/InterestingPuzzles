class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        List<String> list=new ArrayList<>();
        int[][] cost=new int[words.length][words.length];
        
        for(int i=0;i<cost.length;i++) {
            cost[i][i] = maxWidth - words[i].length();
            for(int j=i+1;j<cost.length;j++) {
                cost[i][j]= cost[i][j-1] - words[j].length() -1;
            }
        }
        
        for(int i=0;i<cost.length;i++) {
            for(int j=i;j<cost.length;j++) {
                
                if(cost[i][j]<0)
                    cost[i][j] = Integer.MAX_VALUE;
                else 
                    cost[i][j] = (int) Math.pow(cost[i][j],2);
            }
        }
        
        int[] minCost=new int[words.length];
        int[] result=new int[words.length];
        
        for(int i=words.length-1;i>=0;i--) {
            minCost[i] = cost[i][words.length-1];
            result[i]=words.length;
            for(int j=words.length-1;j>i;j--) {
                if(cost[i][j-1] == Integer.MAX_VALUE){
                    continue;
                }
                if(minCost[i]>minCost[j]+cost[i][j-1]) {
                    minCost[i] = minCost[j] + cost[i][j-1];
                    result[i]  = j;
                }
            }
        }
        
        int i=0;
        int j;
        do {
        StringBuilder sb= new StringBuilder();
         j=result[i];
         for(int k=i;k<j;k++) {
             sb.append(words[k]+" ");
         }
         list.add(sb.toString());
         i = j;
        }while(j<words.length);
        
        return list;
    }
}
